"use strict";
var app = getApp();
Page({
    onLoad: function () {
    },
    data: {
        img1src: '',
        img2src: '',
        img3src: '',
        img4src: '',
        img5src: '',
        combineHeight: 0,
        combineWidth: 0,
    },
    formSubmit: function (e) {
        console.log('form发生了submit事件，携带数据为：', e.detail.value);
        var that = this;
        wx.showLoading({
            title: '下载中...',
            mask: true,
        });
        var fun = function () {
            wx.canvasToTempFilePath({
                canvasId: 'myCanvas',
                quality: 1,
                success: function (res) {
                    console.log("合成的带有小程序码的图片success》》》", res);
                    var tempFilePath = res.tempFilePath;
                    wx.saveImageToPhotosAlbum({
                        filePath: tempFilePath,
                        success: function () {
                            wx.hideLoading();
                            wx.showModal({
                                title: '温馨提示',
                                content: '图片保存成功，可在相册中查看',
                                showCancel: false,
                            });
                        },
                        fail: function (error) {
                            wx.showModal({
                                title: '温馨提示',
                                content: "\u56FE\u7247\u4FDD\u5B58\u5931\u8D25\uFF0C\u8BF7\u91CD\u8BD5," + error,
                                showCancel: false
                            });
                        }
                    });
                    console.log("合成的带有小程序码的图片的信息》》》", res);
                },
                fail: function (error) {
                    console.log("生成的图拍呢 失败 fail fail fail ", error);
                    setTimeout(fun, 5 * 1000);
                }
            }, that);
        };
        setTimeout(fun, 0.5 * 1000);
    },
    formReset: function () {
        console.log('form发生了reset事件');
    },
    up1: function () {
        var _this = this;
        console.log('上传1');
        var that = this;
        wx.chooseImage({
            count: 5,
            sizeType: ['original', 'compressed'],
            sourceType: ['album', 'camera'],
            success: function (res) {
                wx.showLoading({
                    title: '上传中...',
                    mask: true,
                });
                var tempFilePaths = res.tempFilePaths;
                _this.setData({
                    img1src: tempFilePaths[0],
                    img2src: tempFilePaths[1],
                    img3src: tempFilePaths[2],
                    img4src: tempFilePaths[3],
                    img5src: tempFilePaths[4],
                });
                var ctx = wx.createCanvasContext("myCanvas", that);
                var drawText = ['11号 缪钰雯', '缪钰雯 爸爸', '缪钰雯 妈妈', '缪钰雯 奶奶', '缪钰雯 弟弟'];
                var i = 0;
                var imgWs = [];
                var imgHs = [];
                var imgPaths = [];
                for (var key in tempFilePaths) {
                    wx.getImageInfo({
                        src: tempFilePaths[key],
                        success: function (res) {
                            i++;
                            var imgW = res.width;
                            var imgH = res.height;
                            var imgPath = res.path;
                            imgWs.push(imgW);
                            imgHs.push(imgH);
                            imgPaths.push(imgPath);
                            if (i === drawText.length) {
                                that.setData({
                                    canvasWidth: imgW * drawText.length,
                                    canvasHeight: imgH,
                                });
                                ctx.font = "70px orbitron";
                                ctx.fillStyle = "red";
                                setTimeout(function () {
                                    for (var i_1 = 0; i_1 <= drawText.length; i_1++) {
                                        var dx = i_1 * imgW;
                                        ctx.drawImage(imgPaths[i_1], dx, 0, imgW, imgH);
                                        ctx.fillText(drawText[i_1], dx + 250, imgH - 176);
                                        ctx.draw(true);
                                    }
                                }, 1 * 1000);
                            }
                        }
                    });
                }
                console.log('上传成功');
                wx.hideLoading();
            }
        });
    },
    invokeClodFunction: function () {
        console.log('调用云函数 start');
        wx.cloud.init();
        wx.cloud.callFunction({
            name: 'add',
            data: {
                a: 1,
                b: 2,
            },
            complete: function (res) {
                console.log('callFunction test result: ', res);
            }
        });
    }
});
//# sourceMappingURL=data:application/json;base64,